{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.9.0'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{4: ['Holy See', 'Tanzania'],\n",
        " 5: ['Slovakia', 'Tunisia', 'Brunei', 'Myanmar', 'Georgia', 'Papua New Guinea',\n",
        "     'Hungary', 'Fiji', 'Grenada'],\n",
        " 6: ['Kazakhstan', 'Yemen', 'Uganda', 'Montenegro', 'Slovenia', 'Belize',\n",
        "     'Cambodia', 'Czech Republic', 'Andorra', 'Ireland', 'Equatorial Guinea',\n",
        "     'Jordan', 'Antigua and Barbuda', 'Jamaica'],\n",
        " 7: ['San Marino', 'Seychelles', 'Lesotho', 'Spain', 'Sao Tome and Principe',\n",
        "     'Libya', 'Trinidad and Tobago', 'Angola', 'Dominica',\n",
        "     'Saint Vincent and the Grenadines', 'Colombia', 'Guinea-Bissau',\n",
        "     'Lithuania', 'Gambia', 'Luxembourg', 'Central African Republic', 'Malawi',\n",
        "     'South Sudan', 'Mauritius', 'Australia', 'Zimbabwe', 'Bahamas'],\n",
        " 8: ['Namibia', 'Niger', 'Thailand', 'Paraguay', 'Nepal', 'Morocco',\n",
        "     'Madagascar', 'Rwanda', 'Lebanon', 'Malta', 'Greece', 'New Zealand',\n",
        "     'Comoros', 'Burkina Faso', 'Botswana', 'Liechtenstein', 'Nicaragua',\n",
        "     'Iceland', 'Denmark', 'Cameroon', 'Taiwan', 'Israel', 'Netherlands',\n",
        "     'Djibouti', 'Malaysia', 'Croatia', 'Vietnam', 'Mozambique', 'Mongolia',\n",
        "     'Kyrgyzstan', 'Zambia', 'Guyana', 'Monaco', 'Saint Lucia', 'Austria',\n",
        "     'Benin', 'Cyprus'],\n",
        " 9: ['Poland', 'Bermuda', 'South Africa', 'Haiti', 'Indonesia', 'Ethiopia',\n",
        "     'Sri Lanka', 'Philippines', 'Norway', 'Tajikistan', 'Suriname', 'Romania',\n",
        "     'Ukraine', 'Sierra Leone', 'Uruguay', 'Venezuela', 'Qatar', 'Sudan',\n",
        "     'Chad', 'Argentina', 'Barbados', 'Portugal', 'Eritrea', 'Burundi',\n",
        "     'Serbia', 'Afghanistan', 'China', 'Mauritania', 'Ghana', 'Kenya',\n",
        "     'Switzerland', 'Ecuador'],\n",
        " 10: ['India', 'Guatemala', 'Singapore', 'El Salvador', 'Bulgaria', 'Estonia',\n",
        "      'Swaziland', 'Bhutan', 'Maldives', 'Albania', 'Liberia', 'Cuba', 'Canada',\n",
        "      'Oman', 'Moldova', 'Senegal', 'Korea, South', 'Gabon', 'Cape Verde',\n",
        "      'Somalia', 'Saudi Arabia', 'Congo', 'Pakistan', 'Palestine', 'Japan',\n",
        "      'Syria', 'Finland', 'Chile'],\n",
        " 11: ['Bosnia and Herzegovina', 'Belgium', 'Bangladesh', 'Egypt', 'Togo',\n",
        "      'Honduras', 'Belarus', 'Mali', 'Panama', 'Germany',\n",
        "      'United Arab Emirates', 'Costa Rica', 'Azerbaijan', 'Guinea', 'Kosovo',\n",
        "      'Uzbekistan', 'Macedonia'],\n",
        " 12: ['Iran', 'Iraq', 'Brazil', 'Nigeria', 'Turkey', 'Kuwait', 'Italy',\n",
        "      'Dominican Republic', 'United States', 'Bahrain', 'Algeria', 'Peru',\n",
        "      'Armenia', 'Mexico', 'France', 'Latvia'],\n",
        " 13: ['Bolivia', 'Russia']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "18"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{12: ['Iran', 'Iraq', 'Brazil', 'Nigeria', 'Turkey', 'Kuwait', 'Italy',\n",
        "      'Dominican Republic', 'United States', 'Bahrain', 'Algeria', 'Peru',\n",
        "      'Armenia', 'Mexico', 'France', 'Latvia'],\n",
        " 13: ['Bolivia', 'Russia']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Bolivia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Sep2020</td>\n",
        "      <td>22Oct2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Aug2020</td>\n",
        "      <td>30Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Aug2020</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>22Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Bolivia 0th    Past  01Apr2020  13Jun2020    11353142\n",
        "        1st    Past  14Jun2020  25Jun2020    11353142\n",
        "        2nd    Past  26Jun2020  05Jul2020    11353142\n",
        "        3rd    Past  06Jul2020  15Jul2020    11353142\n",
        "        4th    Past  16Jul2020  23Jul2020    11353142\n",
        "        5th    Past  24Jul2020  31Jul2020    11353142\n",
        "        6th    Past  01Aug2020  09Aug2020    11353142\n",
        "        7th    Past  10Aug2020  17Aug2020    11353142\n",
        "        8th    Past  18Aug2020  25Aug2020    11353142\n",
        "        9th    Past  26Aug2020  02Sep2020    11353142\n",
        "        10th   Past  03Sep2020  11Sep2020    11353142\n",
        "        11th   Past  12Sep2020  25Sep2020    11353142\n",
        "        12th   Past  26Sep2020  22Oct2020    11353142\n",
        "Russia  0th    Past  12Feb2020  07May2020   330457362\n",
        "        1st    Past  08May2020  19May2020   330457362\n",
        "        2nd    Past  20May2020  30May2020   330457362\n",
        "        3rd    Past  31May2020  12Jun2020   330457362\n",
        "        4th    Past  13Jun2020  26Jun2020   330457362\n",
        "        5th    Past  27Jun2020  10Jul2020   330457362\n",
        "        6th    Past  11Jul2020  24Jul2020   330457362\n",
        "        7th    Past  25Jul2020  10Aug2020   330457362\n",
        "        8th    Past  11Aug2020  30Aug2020   330457362\n",
        "        9th    Past  31Aug2020  18Sep2020   330457362\n",
        "        10th   Past  19Sep2020  02Oct2020   330457362\n",
        "        11th   Past  03Oct2020  11Oct2020   330457362\n",
        "        12th   Past  12Oct2020  22Oct2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (02Jul2020 - 24Aug2020): finished 1266 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  8th phase (08Aug2020 - 29Aug2020): finished 1478 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  6th phase (28May2020 - 08Jul2020): finished 1282 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (25Jul2020 - 10Aug2020): finished 1281 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  0th phase (09Mar2020 - 22Jun2020): finished 1367 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 11th phase (08Oct2020 - 22Oct2020): finished 1419 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (25Jul2020 - 16Aug2020): finished 1387 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (11Aug2020 - 19Aug2020): finished 1422 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  5th phase (18Aug2020 - 26Aug2020): finished  140 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 09Aug2020): finished  126 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  7th phase (05Sep2020 - 13Sep2020): finished  127 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  3rd phase (25Jul2020 - 06Aug2020): finished  890 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (11Aug2020 - 30Aug2020): finished 1627 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (15Sep2020 - 23Sep2020): finished 1657 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (19Jun2020 - 28Jun2020): finished 1661 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (31Jul2020 - 11Aug2020): finished  207 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  8th phase (08Aug2020 - 18Aug2020): finished  400 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  6th phase (28Jul2020 - 04Aug2020): finished  210 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 06May2020): finished 1640 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  2nd phase (16Jun2020 - 02Jul2020): finished 1692 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARM,  1st phase (25May2020 - 12Jun2020): finished 1687 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (14Jun2020 - 26Jun2020): finished 1222 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (10Aug2020 - 17Aug2020): finished  391 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  7th phase (19Aug2020 - 27Aug2020): finished 1698 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX, 10th phase (25Sep2020 - 05Oct2020): finished 1710 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (03May2020 - 03Jun2020): finished 1685 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  9th phase (08Sep2020 - 17Sep2020): finished 1711 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARM,  4th phase (03Jul2020 - 10Jul2020): finished  568 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  1st phase (06Apr2020 - 17Apr2020): finished 1971 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (17Aug2020 - 04Sep2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (18May2020 - 01Jul2020): finished  375 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 10th phase (04Sep2020 - 28Sep2020): finished 1685 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 30Jul2020): finished 1710 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 11th phase (29Sep2020 - 22Oct2020): finished 1694 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  5th phase (16May2020 - 27May2020): finished 1824 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (19Jul2020 - 03Aug2020): finished  145 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARM,  2nd phase (13Jun2020 - 23Jun2020): finished 1438 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  4th phase (07Aug2020 - 17Aug2020): finished  534 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  3rd phase (03Jul2020 - 13Jul2020): finished 1403 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  0th phase (18Mar2020 - 21May2020): finished 1332 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (09Oct2020 - 22Oct2020): finished  572 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (31May2020 - 12Jun2020): finished 1389 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  8th phase (28Aug2020 - 07Sep2020): finished 1342 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  3rd phase (30Apr2020 - 07May2020): finished 1530 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  2nd phase (10Jul2020 - 24Jul2020): finished 1333 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (01Aug2020 - 12Aug2020): finished  498 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (27Sep2020 - 06Oct2020): finished  143 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  4th phase (08May2020 - 15May2020): finished 1321 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 07May2020): finished 1289 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (02Jul2020 - 24Jul2020): finished  129 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 29Mar2020): finished 1203 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (29Jun2020 - 08Jul2020): finished  134 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 11th phase (07Oct2020 - 22Oct2020): finished  265 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (26Sep2020 - 08Oct2020): finished  771 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARM,  0th phase (17Mar2020 - 24May2020): finished 1145 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 19May2020): finished 1182 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER, 11th phase (30Sep2020 - 22Oct2020): finished 1136 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (30Mar2020 - 10Apr2020): finished 1198 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (10Jul2020 - 20Jul2020): finished  871 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  7th phase (09Jul2020 - 07Aug2020): finished 1368 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (25Sep2020 - 08Oct2020): finished  402 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (23Jul2020 - 11Aug2020): finished  267 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (25Aug2020 - 12Sep2020): finished  501 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARM,  3rd phase (24Jun2020 - 02Jul2020): finished  227 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (08Aug2020 - 23Aug2020): finished  350 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (22May2020 - 08Jun2020): finished 1213 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 10th phase (03Sep2020 - 11Sep2020): finished  686 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (26Aug2020 - 02Sep2020): finished  259 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (07May2020 - 31May2020): finished 1178 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (04Aug2020 - 21Aug2020): finished 1202 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 26Apr2020): finished 1203 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  6th phase (27Aug2020 - 04Sep2020): finished  159 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  1st phase (02May2020 - 23May2020): finished 1290 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  0th phase (03Mar2020 - 22May2020): finished 1245 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1456 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  7th phase (28Jul2020 - 07Aug2020): finished 1375 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (31Jul2020 - 10Aug2020): finished  997 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (24Jul2020 - 31Jul2020): finished  685 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1428 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  9th phase (23Aug2020 - 04Sep2020): finished  457 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 20Jul2020): finished  416 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (14May2020 - 27May2020): finished 1372 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (21Sep2020 - 07Oct2020): finished  305 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  1st phase (10May2020 - 28May2020): finished 1431 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (10Jul2020 - 09Aug2020): finished 1354 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  2nd phase (24May2020 - 25Jun2020): finished 1310 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (03Oct2020 - 11Oct2020): finished 1296 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (24Sep2020 - 22Oct2020): finished 1233 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARM,  8th phase (19Aug2020 - 13Sep2020): finished  256 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (11Apr2020 - 24Apr2020): finished 1211 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (26Jun2020 - 07Jul2020): finished 1156 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (20Aug2020 - 29Aug2020): finished 1137 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (28Mar2020 - 04Apr2020): finished 1084 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (05May2020 - 28May2020): finished 1043 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM, 11th phase (06Oct2020 - 22Oct2020): finished 1051 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  0th phase (12Mar2020 - 01May2020): finished 1013 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (03May2020 - 17May2020): finished  216 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 24Apr2020): finished 1127 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (09Jun2020 - 18Jun2020): finished 1127 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (11Sep2020 - 23Sep2020): finished  144 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (17Jul2020 - 30Jul2020): finished 1284 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1245 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  0th phase (24Mar2020 - 23May2020): finished 1371 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  4th phase (14Jul2020 - 23Jul2020): finished 1457 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  9th phase (22Sep2020 - 30Sep2020): finished  170 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (27Aug2020 - 10Sep2020): finished 1320 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  6th phase (01Aug2020 - 11Aug2020): finished 1405 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ, 11th phase (12Oct2020 - 22Oct2020): finished  313 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 13May2020): finished 1153 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (19Aug2020 - 03Sep2020): finished  323 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (28Sep2020 - 10Oct2020): finished  420 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 11th phase (11Oct2020 - 22Oct2020): finished 1376 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 10th phase (21Sep2020 - 06Oct2020): finished  127 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 26May2020): finished 1260 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (27May2020 - 09Jul2020): finished 1182 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (08Jul2020 - 22Jul2020): finished 1193 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (14Jun2020 - 01Jul2020): finished 1215 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 07Jun2020): finished 1209 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (29May2020 - 15Jun2020): finished  796 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (07May2020 - 21May2020): finished 1231 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (10Aug2020 - 26Aug2020): finished 1123 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ, 10th phase (01Oct2020 - 11Oct2020): finished  276 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 12th phase (26Sep2020 - 22Oct2020): finished  501 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 27Mar2020): finished 1221 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  7th phase (12Aug2020 - 20Aug2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (31Mar2020 - 04May2020): finished 1288 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (24Jun2020 - 07Jul2020): finished  450 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished 1403 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (20May2020 - 30May2020): finished 1566 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  9th phase (08Sep2020 - 24Sep2020): finished 1680 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (31Aug2020 - 18Sep2020): finished 1676 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  1st phase (23Jun2020 - 09Jul2020): finished 1682 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (13Aug2020 - 26Aug2020): finished  550 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (25Apr2020 - 02May2020): finished  193 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  6th phase (09Aug2020 - 18Aug2020): finished 1700 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (19Jul2020 - 27Jul2020): finished  212 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (05Apr2020 - 12Apr2020): finished 1709 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 10th phase (19Sep2020 - 26Sep2020): finished 1715 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (08Jun2020 - 23Jun2020): finished 1705 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (13Sep2020 - 27Sep2020): finished  191 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (25Apr2020 - 26May2020): finished 1689 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (27May2020 - 13Jun2020): finished 1686 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished 1608 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  9th phase (30Aug2020 - 18Sep2020): finished 1803 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (02Jul2020 - 18Jul2020): finished  165 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (21Jul2020 - 31Jul2020): finished  183 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  8th phase (14Sep2020 - 21Sep2020): finished  126 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  0th phase (16Mar2020 - 09May2020): finished 1438 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (10Jun2020 - 23Jun2020): finished  550 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (25Aug2020 - 07Sep2020): finished  136 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 30Mar2020): finished 1263 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (27Aug2020 - 11Sep2020): finished  275 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  1st phase (24May2020 - 15Jun2020): finished 1307 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (07Jul2020 - 16Jul2020): finished  632 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (05Sep2020 - 20Sep2020): finished  147 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (12Aug2020 - 03Sep2020): finished 1328 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (23Jul2020 - 07Aug2020): finished  305 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (22May2020 - 13Jun2020): finished 1316 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (13Sep2020 - 26Sep2020): finished  278 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  4th phase (11Jul2020 - 28Jul2020): finished 1350 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  0th phase (10Mar2020 - 05Apr2020): finished 1593 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (24Jun2020 - 06Jul2020): finished 1428 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARM,  9th phase (14Sep2020 - 29Sep2020): finished 1504 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  5th phase (29Jul2020 - 08Aug2020): finished 1465 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  2nd phase (29May2020 - 18Jun2020): finished 1462 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 02May2020): finished 1365 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  8th phase (13Aug2020 - 22Aug2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM, 10th phase (18Sep2020 - 05Oct2020): finished  248 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (27Jun2020 - 10Jul2020): finished 1329 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (12Aug2020 - 24Aug2020): finished 1286 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  7th phase (05Aug2020 - 12Aug2020): finished  246 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 11th phase (12Sep2020 - 25Sep2020): finished  243 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (27Apr2020 - 06May2020): finished  268 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (13Jun2020 - 26Jun2020): finished 1241 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (26Jun2020 - 09Jul2020): finished 1203 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA, 10th phase (05Sep2020 - 22Sep2020): finished  586 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  9th phase (04Sep2020 - 17Sep2020): finished 1360 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER, 10th phase (18Sep2020 - 29Sep2020): finished 1357 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  286 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARM,  5th phase (11Jul2020 - 20Jul2020): finished 1394 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  3rd phase (26Jun2020 - 08Jul2020): finished  249 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (07Sep2020 - 20Sep2020): finished  252 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (24Sep2020 - 05Oct2020): finished  252 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (22Aug2020 - 12Sep2020): finished  255 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 15Jul2020): finished 1292 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 11th phase (27Sep2020 - 22Oct2020): finished 1442 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 13Jun2020): finished 1279 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (04Jun2020 - 25Jun2020): finished 1346 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (11Jul2020 - 24Jul2020): finished 1535 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  3rd phase (19Jun2020 - 10Jul2020): finished 1548 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (30Aug2020 - 10Sep2020): finished  164 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (19Sep2020 - 02Oct2020): finished 1578 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARM, 10th phase (30Sep2020 - 08Oct2020): finished 1014 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (04Sep2020 - 14Sep2020): finished 1733 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (18Aug2020 - 25Aug2020): finished  617 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA, 11th phase (23Sep2020 - 22Oct2020): finished  432 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (23May2020 - 09Jun2020): finished  233 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (11Sep2020 - 24Sep2020): finished  640 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARM,  7th phase (01Aug2020 - 18Aug2020): finished  238 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  2nd phase (18Apr2020 - 29Apr2020): finished 2191 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (16Jun2020 - 01Jul2020): finished 1955 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (24Aug2020 - 06Sep2020): finished 1856 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (16Jul2020 - 23Jul2020): finished  233 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  8th phase (21Aug2020 - 03Sep2020): finished 1860 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (09Jul2020 - 18Jul2020): finished 1789 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 39 min 31 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Bolivia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>8.49</td>\n",
        "      <td>0.000948141</td>\n",
        "      <td>0.000812912</td>\n",
        "      <td>0.0205924</td>\n",
        "      <td>0.0016109</td>\n",
        "      <td>360</td>\n",
        "      <td>307</td>\n",
        "      <td>12</td>\n",
        "      <td>155</td>\n",
        "      <td>0.001</td>\n",
        "      <td>1.34483</td>\n",
        "      <td>1245</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.27</td>\n",
        "      <td>0.00154827</td>\n",
        "      <td>0.000386086</td>\n",
        "      <td>0.0129202</td>\n",
        "      <td>0.00528692</td>\n",
        "      <td>360</td>\n",
        "      <td>647</td>\n",
        "      <td>19</td>\n",
        "      <td>47</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.029437</td>\n",
        "      <td>1608</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.45</td>\n",
        "      <td>0.0442298</td>\n",
        "      <td>5.9237e-05</td>\n",
        "      <td>0.0121482</td>\n",
        "      <td>0.00467916</td>\n",
        "      <td>360</td>\n",
        "      <td>4220</td>\n",
        "      <td>20</td>\n",
        "      <td>53</td>\n",
        "      <td>0.044</td>\n",
        "      <td>0.0138183</td>\n",
        "      <td>286</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.55</td>\n",
        "      <td>0.0395373</td>\n",
        "      <td>4.58953e-05</td>\n",
        "      <td>0.0108288</td>\n",
        "      <td>0.00402774</td>\n",
        "      <td>360</td>\n",
        "      <td>5447</td>\n",
        "      <td>23</td>\n",
        "      <td>62</td>\n",
        "      <td>0.04</td>\n",
        "      <td>0.00840855</td>\n",
        "      <td>1292</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.8</td>\n",
        "      <td>0.003448</td>\n",
        "      <td>0.000326874</td>\n",
        "      <td>0.0105641</td>\n",
        "      <td>0.00244438</td>\n",
        "      <td>360</td>\n",
        "      <td>764</td>\n",
        "      <td>23</td>\n",
        "      <td>102</td>\n",
        "      <td>0.003</td>\n",
        "      <td>0.0160935</td>\n",
        "      <td>233</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.74</td>\n",
        "      <td>0.0501337</td>\n",
        "      <td>1.86995e-05</td>\n",
        "      <td>0.00778109</td>\n",
        "      <td>0.00195639</td>\n",
        "      <td>360</td>\n",
        "      <td>13369</td>\n",
        "      <td>32</td>\n",
        "      <td>127</td>\n",
        "      <td>0.05</td>\n",
        "      <td>0.011217</td>\n",
        "      <td>685</td>\n",
        "      <td>0 min 25 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.86</td>\n",
        "      <td>0.0395045</td>\n",
        "      <td>5.43309e-05</td>\n",
        "      <td>0.00668422</td>\n",
        "      <td>0.00339681</td>\n",
        "      <td>360</td>\n",
        "      <td>4601</td>\n",
        "      <td>37</td>\n",
        "      <td>73</td>\n",
        "      <td>0.04</td>\n",
        "      <td>0.0168803</td>\n",
        "      <td>126</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.3</td>\n",
        "      <td>0.0351071</td>\n",
        "      <td>4.80415e-05</td>\n",
        "      <td>0.00551863</td>\n",
        "      <td>0.0040482</td>\n",
        "      <td>360</td>\n",
        "      <td>5203</td>\n",
        "      <td>45</td>\n",
        "      <td>61</td>\n",
        "      <td>0.035</td>\n",
        "      <td>0.00893547</td>\n",
        "      <td>391</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.68</td>\n",
        "      <td>0.000655388</td>\n",
        "      <td>0.000255941</td>\n",
        "      <td>0.00427375</td>\n",
        "      <td>0.00604148</td>\n",
        "      <td>360</td>\n",
        "      <td>976</td>\n",
        "      <td>58</td>\n",
        "      <td>41</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0159968</td>\n",
        "      <td>617</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.43</td>\n",
        "      <td>0.0190286</td>\n",
        "      <td>0.000237102</td>\n",
        "      <td>0.00414627</td>\n",
        "      <td>0.00927628</td>\n",
        "      <td>360</td>\n",
        "      <td>1054</td>\n",
        "      <td>60</td>\n",
        "      <td>26</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.00403593</td>\n",
        "      <td>259</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.29</td>\n",
        "      <td>0.277116</td>\n",
        "      <td>0.000240776</td>\n",
        "      <td>0.00464585</td>\n",
        "      <td>0.0114135</td>\n",
        "      <td>360</td>\n",
        "      <td>1038</td>\n",
        "      <td>53</td>\n",
        "      <td>21</td>\n",
        "      <td>0.277</td>\n",
        "      <td>0.0445571</td>\n",
        "      <td>686</td>\n",
        "      <td>0 min 30 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.0564265</td>\n",
        "      <td>5.91198e-05</td>\n",
        "      <td>0.00416418</td>\n",
        "      <td>0.00475254</td>\n",
        "      <td>360</td>\n",
        "      <td>4228</td>\n",
        "      <td>60</td>\n",
        "      <td>52</td>\n",
        "      <td>0.056</td>\n",
        "      <td>0.032138</td>\n",
        "      <td>243</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Sep2020</td>\n",
        "      <td>22Oct2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.47</td>\n",
        "      <td>0.114817</td>\n",
        "      <td>3.95408e-05</td>\n",
        "      <td>0.00230092</td>\n",
        "      <td>0.00432465</td>\n",
        "      <td>360</td>\n",
        "      <td>6322</td>\n",
        "      <td>108</td>\n",
        "      <td>57</td>\n",
        "      <td>0.115</td>\n",
        "      <td>0.0319805</td>\n",
        "      <td>501</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.0336598</td>\n",
        "      <td>0.00231766</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>7</td>\n",
        "      <td>107</td>\n",
        "      <td>0.603</td>\n",
        "      <td>19.3133</td>\n",
        "      <td>1289</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.35</td>\n",
        "      <td>0.000966333</td>\n",
        "      <td>0.000117045</td>\n",
        "      <td>0.0114038</td>\n",
        "      <td>0.00473934</td>\n",
        "      <td>360</td>\n",
        "      <td>2135</td>\n",
        "      <td>21</td>\n",
        "      <td>52</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.10686</td>\n",
        "      <td>1182</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.12</td>\n",
        "      <td>0.000674788</td>\n",
        "      <td>0.00011166</td>\n",
        "      <td>0.0062116</td>\n",
        "      <td>0.00541094</td>\n",
        "      <td>360</td>\n",
        "      <td>2238</td>\n",
        "      <td>40</td>\n",
        "      <td>46</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.105674</td>\n",
        "      <td>1566</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.98</td>\n",
        "      <td>0.0186301</td>\n",
        "      <td>1.88019e-05</td>\n",
        "      <td>0.00461991</td>\n",
        "      <td>0.00460911</td>\n",
        "      <td>360</td>\n",
        "      <td>13296</td>\n",
        "      <td>54</td>\n",
        "      <td>54</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.112536</td>\n",
        "      <td>1389</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.00133042</td>\n",
        "      <td>6.92055e-05</td>\n",
        "      <td>0.00343715</td>\n",
        "      <td>0.00358593</td>\n",
        "      <td>360</td>\n",
        "      <td>3612</td>\n",
        "      <td>72</td>\n",
        "      <td>69</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0954866</td>\n",
        "      <td>1241</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.93</td>\n",
        "      <td>0.0215154</td>\n",
        "      <td>9.96689e-06</td>\n",
        "      <td>0.0024893</td>\n",
        "      <td>0.00260573</td>\n",
        "      <td>360</td>\n",
        "      <td>25083</td>\n",
        "      <td>100</td>\n",
        "      <td>95</td>\n",
        "      <td>0.022</td>\n",
        "      <td>0.0683158</td>\n",
        "      <td>1329</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.8</td>\n",
        "      <td>0.0222878</td>\n",
        "      <td>6.10105e-06</td>\n",
        "      <td>0.00197082</td>\n",
        "      <td>0.00241362</td>\n",
        "      <td>360</td>\n",
        "      <td>40976</td>\n",
        "      <td>126</td>\n",
        "      <td>103</td>\n",
        "      <td>0.022</td>\n",
        "      <td>0.0645551</td>\n",
        "      <td>1535</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.0173241</td>\n",
        "      <td>1.10662e-05</td>\n",
        "      <td>0.0015287</td>\n",
        "      <td>0.00118684</td>\n",
        "      <td>360</td>\n",
        "      <td>22591</td>\n",
        "      <td>163</td>\n",
        "      <td>210</td>\n",
        "      <td>0.017</td>\n",
        "      <td>0.0555852</td>\n",
        "      <td>1281</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Aug2020</td>\n",
        "      <td>30Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.0163816</td>\n",
        "      <td>6.10105e-06</td>\n",
        "      <td>0.00126512</td>\n",
        "      <td>0.00163011</td>\n",
        "      <td>360</td>\n",
        "      <td>40976</td>\n",
        "      <td>197</td>\n",
        "      <td>153</td>\n",
        "      <td>0.016</td>\n",
        "      <td>0.0741201</td>\n",
        "      <td>1627</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Aug2020</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.0358975</td>\n",
        "      <td>6.10111e-06</td>\n",
        "      <td>0.00128719</td>\n",
        "      <td>0.00139944</td>\n",
        "      <td>360</td>\n",
        "      <td>40976</td>\n",
        "      <td>194</td>\n",
        "      <td>178</td>\n",
        "      <td>0.036</td>\n",
        "      <td>0.0769765</td>\n",
        "      <td>1676</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.48</td>\n",
        "      <td>0.023541</td>\n",
        "      <td>1.88817e-06</td>\n",
        "      <td>0.00150676</td>\n",
        "      <td>0.000991608</td>\n",
        "      <td>360</td>\n",
        "      <td>132403</td>\n",
        "      <td>165</td>\n",
        "      <td>252</td>\n",
        "      <td>0.024</td>\n",
        "      <td>0.0300387</td>\n",
        "      <td>1578</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.2</td>\n",
        "      <td>0.000963334</td>\n",
        "      <td>3.12424e-05</td>\n",
        "      <td>0.00224842</td>\n",
        "      <td>0.00098988</td>\n",
        "      <td>360</td>\n",
        "      <td>8001</td>\n",
        "      <td>111</td>\n",
        "      <td>252</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.013724</td>\n",
        "      <td>1296</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>22Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Bolivia 0th    Past  01Apr2020  13Jun2020    11353142  SIR-F  8.49   \n",
        "        1st    Past  14Jun2020  25Jun2020    11353142  SIR-F  2.27   \n",
        "        2nd    Past  26Jun2020  05Jul2020    11353142  SIR-F  2.45   \n",
        "        3rd    Past  06Jul2020  15Jul2020    11353142  SIR-F  2.55   \n",
        "        4th    Past  16Jul2020  23Jul2020    11353142  SIR-F   3.8   \n",
        "        5th    Past  24Jul2020  31Jul2020    11353142  SIR-F  3.74   \n",
        "        6th    Past  01Aug2020  09Aug2020    11353142  SIR-F  1.86   \n",
        "        7th    Past  10Aug2020  17Aug2020    11353142  SIR-F   1.3   \n",
        "        8th    Past  18Aug2020  25Aug2020    11353142  SIR-F  0.68   \n",
        "        9th    Past  26Aug2020  02Sep2020    11353142  SIR-F  0.43   \n",
        "        10th   Past  03Sep2020  11Sep2020    11353142  SIR-F  0.29   \n",
        "        11th   Past  12Sep2020  25Sep2020    11353142  SIR-F  0.82   \n",
        "        12th   Past  26Sep2020  22Oct2020    11353142  SIR-F  0.47   \n",
        "Russia  0th    Past  12Feb2020  07May2020   330457362  SIR-F  0.02   \n",
        "        1st    Past  08May2020  19May2020   330457362  SIR-F  2.35   \n",
        "        2nd    Past  20May2020  30May2020   330457362  SIR-F  1.12   \n",
        "        3rd    Past  31May2020  12Jun2020   330457362  SIR-F  0.98   \n",
        "        4th    Past  13Jun2020  26Jun2020   330457362  SIR-F  0.94   \n",
        "        5th    Past  27Jun2020  10Jul2020   330457362  SIR-F  0.93   \n",
        "        6th    Past  11Jul2020  24Jul2020   330457362  SIR-F   0.8   \n",
        "        7th    Past  25Jul2020  10Aug2020   330457362  SIR-F  1.25   \n",
        "        8th    Past  11Aug2020  30Aug2020   330457362  SIR-F  0.76   \n",
        "        9th    Past  31Aug2020  18Sep2020   330457362  SIR-F  0.88   \n",
        "        10th   Past  19Sep2020  02Oct2020   330457362  SIR-F  1.48   \n",
        "        11th   Past  03Oct2020  11Oct2020   330457362  SIR-F   2.2   \n",
        "        12th   Past  12Oct2020  22Oct2020   330457362      -     -   \n",
        "\n",
        "                     theta        kappa         rho        sigma  tau  \\\n",
        "Country Phase                                                           \n",
        "Bolivia 0th    0.000948141  0.000812912   0.0205924    0.0016109  360   \n",
        "        1st     0.00154827  0.000386086   0.0129202   0.00528692  360   \n",
        "        2nd      0.0442298   5.9237e-05   0.0121482   0.00467916  360   \n",
        "        3rd      0.0395373  4.58953e-05   0.0108288   0.00402774  360   \n",
        "        4th       0.003448  0.000326874   0.0105641   0.00244438  360   \n",
        "        5th      0.0501337  1.86995e-05  0.00778109   0.00195639  360   \n",
        "        6th      0.0395045  5.43309e-05  0.00668422   0.00339681  360   \n",
        "        7th      0.0351071  4.80415e-05  0.00551863    0.0040482  360   \n",
        "        8th    0.000655388  0.000255941  0.00427375   0.00604148  360   \n",
        "        9th      0.0190286  0.000237102  0.00414627   0.00927628  360   \n",
        "        10th      0.277116  0.000240776  0.00464585    0.0114135  360   \n",
        "        11th     0.0564265  5.91198e-05  0.00416418   0.00475254  360   \n",
        "        12th      0.114817  3.95408e-05  0.00230092   0.00432465  360   \n",
        "Russia  0th       0.602763     0.544883   0.0336598   0.00231766  360   \n",
        "        1st    0.000966333  0.000117045   0.0114038   0.00473934  360   \n",
        "        2nd    0.000674788   0.00011166   0.0062116   0.00541094  360   \n",
        "        3rd      0.0186301  1.88019e-05  0.00461991   0.00460911  360   \n",
        "        4th     0.00133042  6.92055e-05  0.00343715   0.00358593  360   \n",
        "        5th      0.0215154  9.96689e-06   0.0024893   0.00260573  360   \n",
        "        6th      0.0222878  6.10105e-06  0.00197082   0.00241362  360   \n",
        "        7th      0.0173241  1.10662e-05   0.0015287   0.00118684  360   \n",
        "        8th      0.0163816  6.10105e-06  0.00126512   0.00163011  360   \n",
        "        9th      0.0358975  6.10111e-06  0.00128719   0.00139944  360   \n",
        "        10th      0.023541  1.88817e-06  0.00150676  0.000991608  360   \n",
        "        11th   0.000963334  3.12424e-05  0.00224842   0.00098988  360   \n",
        "        12th             -            -           -            -    -   \n",
        "\n",
        "              1/alpha2 [day] 1/beta [day] 1/gamma [day] alpha1 [-]  \\\n",
        "Country Phase                                                        \n",
        "Bolivia 0th              307           12           155      0.001   \n",
        "        1st              647           19            47      0.002   \n",
        "        2nd             4220           20            53      0.044   \n",
        "        3rd             5447           23            62       0.04   \n",
        "        4th              764           23           102      0.003   \n",
        "        5th            13369           32           127       0.05   \n",
        "        6th             4601           37            73       0.04   \n",
        "        7th             5203           45            61      0.035   \n",
        "        8th              976           58            41      0.001   \n",
        "        9th             1054           60            26      0.019   \n",
        "        10th            1038           53            21      0.277   \n",
        "        11th            4228           60            52      0.056   \n",
        "        12th            6322          108            57      0.115   \n",
        "Russia  0th                0            7           107      0.603   \n",
        "        1st             2135           21            52      0.001   \n",
        "        2nd             2238           40            46      0.001   \n",
        "        3rd            13296           54            54      0.019   \n",
        "        4th             3612           72            69      0.001   \n",
        "        5th            25083          100            95      0.022   \n",
        "        6th            40976          126           103      0.022   \n",
        "        7th            22591          163           210      0.017   \n",
        "        8th            40976          197           153      0.016   \n",
        "        9th            40976          194           178      0.036   \n",
        "        10th          132403          165           252      0.024   \n",
        "        11th            8001          111           252      0.001   \n",
        "        12th               -            -             -          -   \n",
        "\n",
        "                    RMSLE Trials       Runtime  \n",
        "Country Phase                                   \n",
        "Bolivia 0th       1.34483   1245  1 min  0 sec  \n",
        "        1st      0.029437   1608  1 min  0 sec  \n",
        "        2nd     0.0138183    286  0 min 10 sec  \n",
        "        3rd    0.00840855   1292  1 min  0 sec  \n",
        "        4th     0.0160935    233  0 min  5 sec  \n",
        "        5th      0.011217    685  0 min 25 sec  \n",
        "        6th     0.0168803    126  0 min  5 sec  \n",
        "        7th    0.00893547    391  0 min 10 sec  \n",
        "        8th     0.0159968    617  0 min 15 sec  \n",
        "        9th    0.00403593    259  0 min 10 sec  \n",
        "        10th    0.0445571    686  0 min 30 sec  \n",
        "        11th     0.032138    243  0 min 10 sec  \n",
        "        12th    0.0319805    501  0 min 20 sec  \n",
        "Russia  0th       19.3133   1289  1 min  0 sec  \n",
        "        1st       0.10686   1182  1 min  0 sec  \n",
        "        2nd      0.105674   1566  1 min  0 sec  \n",
        "        3rd      0.112536   1389  1 min  0 sec  \n",
        "        4th     0.0954866   1241  1 min  0 sec  \n",
        "        5th     0.0683158   1329  1 min  0 sec  \n",
        "        6th     0.0645551   1535  1 min  0 sec  \n",
        "        7th     0.0555852   1281  1 min  0 sec  \n",
        "        8th     0.0741201   1627  1 min  0 sec  \n",
        "        9th     0.0769765   1676  1 min  0 sec  \n",
        "        10th    0.0300387   1578  1 min  0 sec  \n",
        "        11th     0.013724   1296  1 min  0 sec  \n",
        "        12th            -      -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-26</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.0169054</td>\n",
        "      <td>0.0184833</td>\n",
        "      <td>0.0484743</td>\n",
        "      <td>0.00680523</td>\n",
        "      <td>0.017</td>\n",
        "      <td>13</td>\n",
        "      <td>5</td>\n",
        "      <td>36</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-27</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.0169054</td>\n",
        "      <td>0.0184833</td>\n",
        "      <td>0.0484743</td>\n",
        "      <td>0.00680523</td>\n",
        "      <td>0.017</td>\n",
        "      <td>13</td>\n",
        "      <td>5</td>\n",
        "      <td>36</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-28</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.0169054</td>\n",
        "      <td>0.0184833</td>\n",
        "      <td>0.0484743</td>\n",
        "      <td>0.00680523</td>\n",
        "      <td>0.017</td>\n",
        "      <td>13</td>\n",
        "      <td>5</td>\n",
        "      <td>36</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-29</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.0169054</td>\n",
        "      <td>0.0184833</td>\n",
        "      <td>0.0484743</td>\n",
        "      <td>0.00680523</td>\n",
        "      <td>0.017</td>\n",
        "      <td>13</td>\n",
        "      <td>5</td>\n",
        "      <td>36</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-01</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.0169054</td>\n",
        "      <td>0.0184833</td>\n",
        "      <td>0.0484743</td>\n",
        "      <td>0.00680523</td>\n",
        "      <td>0.017</td>\n",
        "      <td>13</td>\n",
        "      <td>5</td>\n",
        "      <td>36</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country      theta      kappa        rho       sigma alpha1 [-]  \\\n",
        "0 2020-02-26    Iran  0.0169054  0.0184833  0.0484743  0.00680523      0.017   \n",
        "1 2020-02-27    Iran  0.0169054  0.0184833  0.0484743  0.00680523      0.017   \n",
        "2 2020-02-28    Iran  0.0169054  0.0184833  0.0484743  0.00680523      0.017   \n",
        "3 2020-02-29    Iran  0.0169054  0.0184833  0.0484743  0.00680523      0.017   \n",
        "4 2020-03-01    Iran  0.0169054  0.0184833  0.0484743  0.00680523      0.017   \n",
        "\n",
        "  1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0             13            5            36  ...             2   \n",
        "1             13            5            36  ...             2   \n",
        "2             13            5            36  ...             2   \n",
        "3             13            5            36  ...             2   \n",
        "4             13            5            36  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    0   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      1               0                0             20.37  \n",
        "1                      1               0                0             20.37  \n",
        "2                      1               0                0             20.37  \n",
        "3                      1               0                0             20.37  \n",
        "4                      1               0                0             20.37  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Armenia</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-18</th>\n",
        "      <td>1.41</td>\n",
        "      <td>2.83</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.47</td>\n",
        "      <td>1.09</td>\n",
        "      <td>0.89</td>\n",
        "      <td>24.52</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.1</td>\n",
        "      <td>2.0</td>\n",
        "      <td>1.03</td>\n",
        "      <td>651.0</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.58</td>\n",
        "      <td>2.2</td>\n",
        "      <td>1.2</td>\n",
        "      <td>2.61</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-19</th>\n",
        "      <td>1.41</td>\n",
        "      <td>2.83</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.47</td>\n",
        "      <td>1.09</td>\n",
        "      <td>0.89</td>\n",
        "      <td>24.52</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.1</td>\n",
        "      <td>2.0</td>\n",
        "      <td>1.03</td>\n",
        "      <td>651.0</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.58</td>\n",
        "      <td>2.2</td>\n",
        "      <td>1.2</td>\n",
        "      <td>2.61</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-20</th>\n",
        "      <td>1.41</td>\n",
        "      <td>2.83</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.47</td>\n",
        "      <td>1.09</td>\n",
        "      <td>0.89</td>\n",
        "      <td>24.52</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.1</td>\n",
        "      <td>2.0</td>\n",
        "      <td>1.03</td>\n",
        "      <td>651.0</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.58</td>\n",
        "      <td>2.2</td>\n",
        "      <td>1.2</td>\n",
        "      <td>2.61</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-21</th>\n",
        "      <td>1.41</td>\n",
        "      <td>2.83</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.47</td>\n",
        "      <td>1.09</td>\n",
        "      <td>0.89</td>\n",
        "      <td>24.52</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.1</td>\n",
        "      <td>2.0</td>\n",
        "      <td>1.03</td>\n",
        "      <td>651.0</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.58</td>\n",
        "      <td>2.2</td>\n",
        "      <td>1.2</td>\n",
        "      <td>2.61</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-22</th>\n",
        "      <td>1.41</td>\n",
        "      <td>2.83</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.47</td>\n",
        "      <td>1.09</td>\n",
        "      <td>0.89</td>\n",
        "      <td>24.52</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.1</td>\n",
        "      <td>2.0</td>\n",
        "      <td>1.03</td>\n",
        "      <td>651.0</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.58</td>\n",
        "      <td>2.2</td>\n",
        "      <td>1.2</td>\n",
        "      <td>2.61</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Algeria  Armenia  Bahrain  Bolivia  Brazil  Dominican Republic  \\\n",
        "Date                                                                         \n",
        "2020-10-18     1.41     2.83     0.85     0.47    1.09                0.89   \n",
        "2020-10-19     1.41     2.83     0.85     0.47    1.09                0.89   \n",
        "2020-10-20     1.41     2.83     0.85     0.47    1.09                0.89   \n",
        "2020-10-21     1.41     2.83     0.85     0.47    1.09                0.89   \n",
        "2020-10-22     1.41     2.83     0.85     0.47    1.09                0.89   \n",
        "\n",
        "Country     France  Iran  Iraq  Italy  Kuwait  Latvia  Mexico  Nigeria  Peru  \\\n",
        "Date                                                                           \n",
        "2020-10-18   24.52  1.35   1.1    2.0    1.03   651.0    1.08     0.75  0.58   \n",
        "2020-10-19   24.52  1.35   1.1    2.0    1.03   651.0    1.08     0.75  0.58   \n",
        "2020-10-20   24.52  1.35   1.1    2.0    1.03   651.0    1.08     0.75  0.58   \n",
        "2020-10-21   24.52  1.35   1.1    2.0    1.03   651.0    1.08     0.75  0.58   \n",
        "2020-10-22   24.52  1.35   1.1    2.0    1.03   651.0    1.08     0.75  0.58   \n",
        "\n",
        "Country     Russia  Turkey  United States  \n",
        "Date                                       \n",
        "2020-10-18     2.2     1.2           2.61  \n",
        "2020-10-19     2.2     1.2           2.61  \n",
        "2020-10-20     2.2     1.2           2.61  \n",
        "2020-10-21     2.2     1.2           2.61  \n",
        "2020-10-22     2.2     1.2           2.61  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Armenia</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-18</th>\n",
        "      <td>0.002807</td>\n",
        "      <td>0.021334</td>\n",
        "      <td>0.023027</td>\n",
        "      <td>0.002301</td>\n",
        "      <td>0.010701</td>\n",
        "      <td>0.005806</td>\n",
        "      <td>0.007011</td>\n",
        "      <td>0.01596</td>\n",
        "      <td>0.016142</td>\n",
        "      <td>0.011347</td>\n",
        "      <td>0.02302</td>\n",
        "      <td>0.0086</td>\n",
        "      <td>0.030271</td>\n",
        "      <td>0.004238</td>\n",
        "      <td>0.000865</td>\n",
        "      <td>0.002248</td>\n",
        "      <td>0.012926</td>\n",
        "      <td>0.003259</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-19</th>\n",
        "      <td>0.002807</td>\n",
        "      <td>0.021334</td>\n",
        "      <td>0.023027</td>\n",
        "      <td>0.002301</td>\n",
        "      <td>0.010701</td>\n",
        "      <td>0.005806</td>\n",
        "      <td>0.007011</td>\n",
        "      <td>0.01596</td>\n",
        "      <td>0.016142</td>\n",
        "      <td>0.011347</td>\n",
        "      <td>0.02302</td>\n",
        "      <td>0.0086</td>\n",
        "      <td>0.030271</td>\n",
        "      <td>0.004238</td>\n",
        "      <td>0.000865</td>\n",
        "      <td>0.002248</td>\n",
        "      <td>0.012926</td>\n",
        "      <td>0.003259</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-20</th>\n",
        "      <td>0.002807</td>\n",
        "      <td>0.021334</td>\n",
        "      <td>0.023027</td>\n",
        "      <td>0.002301</td>\n",
        "      <td>0.010701</td>\n",
        "      <td>0.005806</td>\n",
        "      <td>0.007011</td>\n",
        "      <td>0.01596</td>\n",
        "      <td>0.016142</td>\n",
        "      <td>0.011347</td>\n",
        "      <td>0.02302</td>\n",
        "      <td>0.0086</td>\n",
        "      <td>0.030271</td>\n",
        "      <td>0.004238</td>\n",
        "      <td>0.000865</td>\n",
        "      <td>0.002248</td>\n",
        "      <td>0.012926</td>\n",
        "      <td>0.003259</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-21</th>\n",
        "      <td>0.002807</td>\n",
        "      <td>0.021334</td>\n",
        "      <td>0.023027</td>\n",
        "      <td>0.002301</td>\n",
        "      <td>0.010701</td>\n",
        "      <td>0.005806</td>\n",
        "      <td>0.007011</td>\n",
        "      <td>0.01596</td>\n",
        "      <td>0.016142</td>\n",
        "      <td>0.011347</td>\n",
        "      <td>0.02302</td>\n",
        "      <td>0.0086</td>\n",
        "      <td>0.030271</td>\n",
        "      <td>0.004238</td>\n",
        "      <td>0.000865</td>\n",
        "      <td>0.002248</td>\n",
        "      <td>0.012926</td>\n",
        "      <td>0.003259</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-22</th>\n",
        "      <td>0.002807</td>\n",
        "      <td>0.021334</td>\n",
        "      <td>0.023027</td>\n",
        "      <td>0.002301</td>\n",
        "      <td>0.010701</td>\n",
        "      <td>0.005806</td>\n",
        "      <td>0.007011</td>\n",
        "      <td>0.01596</td>\n",
        "      <td>0.016142</td>\n",
        "      <td>0.011347</td>\n",
        "      <td>0.02302</td>\n",
        "      <td>0.0086</td>\n",
        "      <td>0.030271</td>\n",
        "      <td>0.004238</td>\n",
        "      <td>0.000865</td>\n",
        "      <td>0.002248</td>\n",
        "      <td>0.012926</td>\n",
        "      <td>0.003259</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Algeria   Armenia   Bahrain   Bolivia    Brazil  \\\n",
        "Date                                                           \n",
        "2020-10-18  0.002807  0.021334  0.023027  0.002301  0.010701   \n",
        "2020-10-19  0.002807  0.021334  0.023027  0.002301  0.010701   \n",
        "2020-10-20  0.002807  0.021334  0.023027  0.002301  0.010701   \n",
        "2020-10-21  0.002807  0.021334  0.023027  0.002301  0.010701   \n",
        "2020-10-22  0.002807  0.021334  0.023027  0.002301  0.010701   \n",
        "\n",
        "Country     Dominican Republic    France     Iran      Iraq     Italy  \\\n",
        "Date                                                                    \n",
        "2020-10-18            0.005806  0.007011  0.01596  0.016142  0.011347   \n",
        "2020-10-19            0.005806  0.007011  0.01596  0.016142  0.011347   \n",
        "2020-10-20            0.005806  0.007011  0.01596  0.016142  0.011347   \n",
        "2020-10-21            0.005806  0.007011  0.01596  0.016142  0.011347   \n",
        "2020-10-22            0.005806  0.007011  0.01596  0.016142  0.011347   \n",
        "\n",
        "Country      Kuwait  Latvia    Mexico   Nigeria      Peru    Russia    Turkey  \\\n",
        "Date                                                                            \n",
        "2020-10-18  0.02302  0.0086  0.030271  0.004238  0.000865  0.002248  0.012926   \n",
        "2020-10-19  0.02302  0.0086  0.030271  0.004238  0.000865  0.002248  0.012926   \n",
        "2020-10-20  0.02302  0.0086  0.030271  0.004238  0.000865  0.002248  0.012926   \n",
        "2020-10-21  0.02302  0.0086  0.030271  0.004238  0.000865  0.002248  0.012926   \n",
        "2020-10-22  0.02302  0.0086  0.030271  0.004238  0.000865  0.002248  0.012926   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-10-18       0.003259  \n",
        "2020-10-19       0.003259  \n",
        "2020-10-20       0.003259  \n",
        "2020-10-21       0.003259  \n",
        "2020-10-22       0.003259  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Armenia</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-18</th>\n",
        "      <td>0.001897</td>\n",
        "      <td>0.007295</td>\n",
        "      <td>0.027007</td>\n",
        "      <td>0.004325</td>\n",
        "      <td>0.009487</td>\n",
        "      <td>0.006484</td>\n",
        "      <td>0.00024</td>\n",
        "      <td>0.011009</td>\n",
        "      <td>0.014428</td>\n",
        "      <td>0.005619</td>\n",
        "      <td>0.022127</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.0257</td>\n",
        "      <td>0.005651</td>\n",
        "      <td>0.001474</td>\n",
        "      <td>0.00099</td>\n",
        "      <td>0.010256</td>\n",
        "      <td>0.001209</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-19</th>\n",
        "      <td>0.001897</td>\n",
        "      <td>0.007295</td>\n",
        "      <td>0.027007</td>\n",
        "      <td>0.004325</td>\n",
        "      <td>0.009487</td>\n",
        "      <td>0.006484</td>\n",
        "      <td>0.00024</td>\n",
        "      <td>0.011009</td>\n",
        "      <td>0.014428</td>\n",
        "      <td>0.005619</td>\n",
        "      <td>0.022127</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.0257</td>\n",
        "      <td>0.005651</td>\n",
        "      <td>0.001474</td>\n",
        "      <td>0.00099</td>\n",
        "      <td>0.010256</td>\n",
        "      <td>0.001209</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-20</th>\n",
        "      <td>0.001897</td>\n",
        "      <td>0.007295</td>\n",
        "      <td>0.027007</td>\n",
        "      <td>0.004325</td>\n",
        "      <td>0.009487</td>\n",
        "      <td>0.006484</td>\n",
        "      <td>0.00024</td>\n",
        "      <td>0.011009</td>\n",
        "      <td>0.014428</td>\n",
        "      <td>0.005619</td>\n",
        "      <td>0.022127</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.0257</td>\n",
        "      <td>0.005651</td>\n",
        "      <td>0.001474</td>\n",
        "      <td>0.00099</td>\n",
        "      <td>0.010256</td>\n",
        "      <td>0.001209</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-21</th>\n",
        "      <td>0.001897</td>\n",
        "      <td>0.007295</td>\n",
        "      <td>0.027007</td>\n",
        "      <td>0.004325</td>\n",
        "      <td>0.009487</td>\n",
        "      <td>0.006484</td>\n",
        "      <td>0.00024</td>\n",
        "      <td>0.011009</td>\n",
        "      <td>0.014428</td>\n",
        "      <td>0.005619</td>\n",
        "      <td>0.022127</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.0257</td>\n",
        "      <td>0.005651</td>\n",
        "      <td>0.001474</td>\n",
        "      <td>0.00099</td>\n",
        "      <td>0.010256</td>\n",
        "      <td>0.001209</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-22</th>\n",
        "      <td>0.001897</td>\n",
        "      <td>0.007295</td>\n",
        "      <td>0.027007</td>\n",
        "      <td>0.004325</td>\n",
        "      <td>0.009487</td>\n",
        "      <td>0.006484</td>\n",
        "      <td>0.00024</td>\n",
        "      <td>0.011009</td>\n",
        "      <td>0.014428</td>\n",
        "      <td>0.005619</td>\n",
        "      <td>0.022127</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.0257</td>\n",
        "      <td>0.005651</td>\n",
        "      <td>0.001474</td>\n",
        "      <td>0.00099</td>\n",
        "      <td>0.010256</td>\n",
        "      <td>0.001209</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Algeria   Armenia   Bahrain   Bolivia    Brazil  \\\n",
        "Date                                                           \n",
        "2020-10-18  0.001897  0.007295  0.027007  0.004325  0.009487   \n",
        "2020-10-19  0.001897  0.007295  0.027007  0.004325  0.009487   \n",
        "2020-10-20  0.001897  0.007295  0.027007  0.004325  0.009487   \n",
        "2020-10-21  0.001897  0.007295  0.027007  0.004325  0.009487   \n",
        "2020-10-22  0.001897  0.007295  0.027007  0.004325  0.009487   \n",
        "\n",
        "Country     Dominican Republic   France      Iran      Iraq     Italy  \\\n",
        "Date                                                                    \n",
        "2020-10-18            0.006484  0.00024  0.011009  0.014428  0.005619   \n",
        "2020-10-19            0.006484  0.00024  0.011009  0.014428  0.005619   \n",
        "2020-10-20            0.006484  0.00024  0.011009  0.014428  0.005619   \n",
        "2020-10-21            0.006484  0.00024  0.011009  0.014428  0.005619   \n",
        "2020-10-22            0.006484  0.00024  0.011009  0.014428  0.005619   \n",
        "\n",
        "Country       Kuwait  Latvia  Mexico   Nigeria      Peru   Russia    Turkey  \\\n",
        "Date                                                                          \n",
        "2020-10-18  0.022127     0.0  0.0257  0.005651  0.001474  0.00099  0.010256   \n",
        "2020-10-19  0.022127     0.0  0.0257  0.005651  0.001474  0.00099  0.010256   \n",
        "2020-10-20  0.022127     0.0  0.0257  0.005651  0.001474  0.00099  0.010256   \n",
        "2020-10-21  0.022127     0.0  0.0257  0.005651  0.001474  0.00099  0.010256   \n",
        "2020-10-22  0.022127     0.0  0.0257  0.005651  0.001474  0.00099  0.010256   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-10-18       0.001209  \n",
        "2020-10-19       0.001209  \n",
        "2020-10-20       0.001209  \n",
        "2020-10-21       0.001209  \n",
        "2020-10-22       0.001209  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Armenia</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-18</th>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.00025</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.00004</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000045</td>\n",
        "      <td>0.000606</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000176</td>\n",
        "      <td>0.000013</td>\n",
        "      <td>0.000388</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-19</th>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.00025</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.00004</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000045</td>\n",
        "      <td>0.000606</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000176</td>\n",
        "      <td>0.000013</td>\n",
        "      <td>0.000388</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-20</th>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.00025</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.00004</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000045</td>\n",
        "      <td>0.000606</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000176</td>\n",
        "      <td>0.000013</td>\n",
        "      <td>0.000388</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-21</th>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.00025</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.00004</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000045</td>\n",
        "      <td>0.000606</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000176</td>\n",
        "      <td>0.000013</td>\n",
        "      <td>0.000388</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-22</th>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.00025</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.00004</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000045</td>\n",
        "      <td>0.000606</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000176</td>\n",
        "      <td>0.000013</td>\n",
        "      <td>0.000388</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Algeria  Armenia   Bahrain  Bolivia    Brazil  \\\n",
        "Date                                                         \n",
        "2020-10-18  0.000098  0.00025  0.000059  0.00004  0.000148   \n",
        "2020-10-19  0.000098  0.00025  0.000059  0.00004  0.000148   \n",
        "2020-10-20  0.000098  0.00025  0.000059  0.00004  0.000148   \n",
        "2020-10-21  0.000098  0.00025  0.000059  0.00004  0.000148   \n",
        "2020-10-22  0.000098  0.00025  0.000059  0.00004  0.000148   \n",
        "\n",
        "Country     Dominican Republic    France      Iran      Iraq     Italy  \\\n",
        "Date                                                                     \n",
        "2020-10-18             0.00006  0.000045  0.000606  0.000235  0.000054   \n",
        "2020-10-19             0.00006  0.000045  0.000606  0.000235  0.000054   \n",
        "2020-10-20             0.00006  0.000045  0.000606  0.000235  0.000054   \n",
        "2020-10-21             0.00006  0.000045  0.000606  0.000235  0.000054   \n",
        "2020-10-22             0.00006  0.000045  0.000606  0.000235  0.000054   \n",
        "\n",
        "Country       Kuwait    Latvia    Mexico   Nigeria      Peru    Russia  \\\n",
        "Date                                                                     \n",
        "2020-10-18  0.000176  0.000013  0.000388  0.000002  0.000021  0.000031   \n",
        "2020-10-19  0.000176  0.000013  0.000388  0.000002  0.000021  0.000031   \n",
        "2020-10-20  0.000176  0.000013  0.000388  0.000002  0.000021  0.000031   \n",
        "2020-10-21  0.000176  0.000013  0.000388  0.000002  0.000021  0.000031   \n",
        "2020-10-22  0.000176  0.000013  0.000388  0.000002  0.000021  0.000031   \n",
        "\n",
        "Country       Turkey  United States  \n",
        "Date                                 \n",
        "2020-10-18  0.000463       0.000037  \n",
        "2020-10-19  0.000463       0.000037  \n",
        "2020-10-20  0.000463       0.000037  \n",
        "2020-10-21  0.000463       0.000037  \n",
        "2020-10-22  0.000463       0.000037  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Armenia</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-18</th>\n",
        "      <td>0.000492</td>\n",
        "      <td>0.000551</td>\n",
        "      <td>0.002688</td>\n",
        "      <td>0.114817</td>\n",
        "      <td>0.018718</td>\n",
        "      <td>0.000243</td>\n",
        "      <td>0.002099</td>\n",
        "      <td>0.021024</td>\n",
        "      <td>0.000467</td>\n",
        "      <td>0.001444</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000238</td>\n",
        "      <td>0.071104</td>\n",
        "      <td>0.000213</td>\n",
        "      <td>0.000866</td>\n",
        "      <td>0.000963</td>\n",
        "      <td>0.002599</td>\n",
        "      <td>0.001045</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-19</th>\n",
        "      <td>0.000492</td>\n",
        "      <td>0.000551</td>\n",
        "      <td>0.002688</td>\n",
        "      <td>0.114817</td>\n",
        "      <td>0.018718</td>\n",
        "      <td>0.000243</td>\n",
        "      <td>0.002099</td>\n",
        "      <td>0.021024</td>\n",
        "      <td>0.000467</td>\n",
        "      <td>0.001444</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000238</td>\n",
        "      <td>0.071104</td>\n",
        "      <td>0.000213</td>\n",
        "      <td>0.000866</td>\n",
        "      <td>0.000963</td>\n",
        "      <td>0.002599</td>\n",
        "      <td>0.001045</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-20</th>\n",
        "      <td>0.000492</td>\n",
        "      <td>0.000551</td>\n",
        "      <td>0.002688</td>\n",
        "      <td>0.114817</td>\n",
        "      <td>0.018718</td>\n",
        "      <td>0.000243</td>\n",
        "      <td>0.002099</td>\n",
        "      <td>0.021024</td>\n",
        "      <td>0.000467</td>\n",
        "      <td>0.001444</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000238</td>\n",
        "      <td>0.071104</td>\n",
        "      <td>0.000213</td>\n",
        "      <td>0.000866</td>\n",
        "      <td>0.000963</td>\n",
        "      <td>0.002599</td>\n",
        "      <td>0.001045</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-21</th>\n",
        "      <td>0.000492</td>\n",
        "      <td>0.000551</td>\n",
        "      <td>0.002688</td>\n",
        "      <td>0.114817</td>\n",
        "      <td>0.018718</td>\n",
        "      <td>0.000243</td>\n",
        "      <td>0.002099</td>\n",
        "      <td>0.021024</td>\n",
        "      <td>0.000467</td>\n",
        "      <td>0.001444</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000238</td>\n",
        "      <td>0.071104</td>\n",
        "      <td>0.000213</td>\n",
        "      <td>0.000866</td>\n",
        "      <td>0.000963</td>\n",
        "      <td>0.002599</td>\n",
        "      <td>0.001045</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-22</th>\n",
        "      <td>0.000492</td>\n",
        "      <td>0.000551</td>\n",
        "      <td>0.002688</td>\n",
        "      <td>0.114817</td>\n",
        "      <td>0.018718</td>\n",
        "      <td>0.000243</td>\n",
        "      <td>0.002099</td>\n",
        "      <td>0.021024</td>\n",
        "      <td>0.000467</td>\n",
        "      <td>0.001444</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000238</td>\n",
        "      <td>0.071104</td>\n",
        "      <td>0.000213</td>\n",
        "      <td>0.000866</td>\n",
        "      <td>0.000963</td>\n",
        "      <td>0.002599</td>\n",
        "      <td>0.001045</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Algeria   Armenia   Bahrain   Bolivia    Brazil  \\\n",
        "Date                                                           \n",
        "2020-10-18  0.000492  0.000551  0.002688  0.114817  0.018718   \n",
        "2020-10-19  0.000492  0.000551  0.002688  0.114817  0.018718   \n",
        "2020-10-20  0.000492  0.000551  0.002688  0.114817  0.018718   \n",
        "2020-10-21  0.000492  0.000551  0.002688  0.114817  0.018718   \n",
        "2020-10-22  0.000492  0.000551  0.002688  0.114817  0.018718   \n",
        "\n",
        "Country     Dominican Republic    France      Iran      Iraq     Italy  \\\n",
        "Date                                                                     \n",
        "2020-10-18            0.000243  0.002099  0.021024  0.000467  0.001444   \n",
        "2020-10-19            0.000243  0.002099  0.021024  0.000467  0.001444   \n",
        "2020-10-20            0.000243  0.002099  0.021024  0.000467  0.001444   \n",
        "2020-10-21            0.000243  0.002099  0.021024  0.000467  0.001444   \n",
        "2020-10-22            0.000243  0.002099  0.021024  0.000467  0.001444   \n",
        "\n",
        "Country       Kuwait    Latvia    Mexico   Nigeria      Peru    Russia  \\\n",
        "Date                                                                     \n",
        "2020-10-18  0.000153  0.000238  0.071104  0.000213  0.000866  0.000963   \n",
        "2020-10-19  0.000153  0.000238  0.071104  0.000213  0.000866  0.000963   \n",
        "2020-10-20  0.000153  0.000238  0.071104  0.000213  0.000866  0.000963   \n",
        "2020-10-21  0.000153  0.000238  0.071104  0.000213  0.000866  0.000963   \n",
        "2020-10-22  0.000153  0.000238  0.071104  0.000213  0.000866  0.000963   \n",
        "\n",
        "Country       Turkey  United States  \n",
        "Date                                 \n",
        "2020-10-18  0.002599       0.001045  \n",
        "2020-10-19  0.002599       0.001045  \n",
        "2020-10-20  0.002599       0.001045  \n",
        "2020-10-21  0.002599       0.001045  \n",
        "2020-10-22  0.002599       0.001045  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 83579 entries, 0 to 83816\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 83579 non-null  datetime64[ns]\n",
        " 1   Country                              83579 non-null  object        \n",
        " 2   Rt                                   83579 non-null  float64       \n",
        " 3   theta                                83579 non-null  float64       \n",
        " 4   kappa                                83579 non-null  float64       \n",
        " 5   rho                                  83579 non-null  float64       \n",
        " 6   sigma                                83579 non-null  float64       \n",
        " 7   School_closing                       83579 non-null  int64         \n",
        " 8   Workplace_closing                    83579 non-null  int64         \n",
        " 9   Cancel_events                        83579 non-null  int64         \n",
        " 10  Gatherings_restrictions              83579 non-null  int64         \n",
        " 11  Transport_closing                    83579 non-null  int64         \n",
        " 12  Stay_home_restrictions               83579 non-null  int64         \n",
        " 13  Internal_movement_restrictions       83579 non-null  int64         \n",
        " 14  International_movement_restrictions  83579 non-null  int64         \n",
        " 15  Information_campaigns                83579 non-null  int64         \n",
        " 16  Testing_policy                       83579 non-null  int64         \n",
        " 17  Contact_tracing                      83579 non-null  int64         \n",
        " 18  Stringency_index                     83579 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 12.8+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_0d087c0e_1478_11eb_b977_52540050978drow0_col0,#T_0d087c0e_1478_11eb_b977_52540050978drow1_col1,#T_0d087c0e_1478_11eb_b977_52540050978drow2_col2,#T_0d087c0e_1478_11eb_b977_52540050978drow3_col3,#T_0d087c0e_1478_11eb_b977_52540050978drow4_col4,#T_0d087c0e_1478_11eb_b977_52540050978drow5_col5,#T_0d087c0e_1478_11eb_b977_52540050978drow6_col6,#T_0d087c0e_1478_11eb_b977_52540050978drow7_col7,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col8,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col9,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col10,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col11,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col1,#T_0d087c0e_1478_11eb_b977_52540050978drow1_col0,#T_0d087c0e_1478_11eb_b977_52540050978drow4_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col4{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col2,#T_0d087c0e_1478_11eb_b977_52540050978drow1_col9,#T_0d087c0e_1478_11eb_b977_52540050978drow2_col0,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col1{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col3,#T_0d087c0e_1478_11eb_b977_52540050978drow3_col0{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col4,#T_0d087c0e_1478_11eb_b977_52540050978drow4_col0{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col5,#T_0d087c0e_1478_11eb_b977_52540050978drow5_col0{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col6,#T_0d087c0e_1478_11eb_b977_52540050978drow6_col0{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col7,#T_0d087c0e_1478_11eb_b977_52540050978drow1_col8,#T_0d087c0e_1478_11eb_b977_52540050978drow2_col8,#T_0d087c0e_1478_11eb_b977_52540050978drow7_col0,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col1,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col2{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col8,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col0{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col9,#T_0d087c0e_1478_11eb_b977_52540050978drow2_col6,#T_0d087c0e_1478_11eb_b977_52540050978drow6_col2,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col0{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col10,#T_0d087c0e_1478_11eb_b977_52540050978drow0_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow2_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col0,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col2,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col0{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col11,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col0{\n",
        "            background-color:  #eae6f1;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col0{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col0{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col0{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow0_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col0{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col2,#T_0d087c0e_1478_11eb_b977_52540050978drow2_col1{\n",
        "            background-color:  #023a5b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col3,#T_0d087c0e_1478_11eb_b977_52540050978drow3_col1,#T_0d087c0e_1478_11eb_b977_52540050978drow5_col10,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col5{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col4,#T_0d087c0e_1478_11eb_b977_52540050978drow4_col1{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col5,#T_0d087c0e_1478_11eb_b977_52540050978drow5_col1{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col6,#T_0d087c0e_1478_11eb_b977_52540050978drow6_col1,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col9{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col7,#T_0d087c0e_1478_11eb_b977_52540050978drow7_col1{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col10,#T_0d087c0e_1478_11eb_b977_52540050978drow4_col5,#T_0d087c0e_1478_11eb_b977_52540050978drow5_col4,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col1{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col11,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col1,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col8{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow2_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow3_col11,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col3,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col1,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col2{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow3_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col1,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col3{\n",
        "            background-color:  #f4edf6;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col1{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow3_col7,#T_0d087c0e_1478_11eb_b977_52540050978drow7_col3,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col1{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow1_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col1{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow2_col3,#T_0d087c0e_1478_11eb_b977_52540050978drow3_col2{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow2_col4,#T_0d087c0e_1478_11eb_b977_52540050978drow4_col2{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow2_col5,#T_0d087c0e_1478_11eb_b977_52540050978drow3_col5,#T_0d087c0e_1478_11eb_b977_52540050978drow5_col2,#T_0d087c0e_1478_11eb_b977_52540050978drow5_col3{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow2_col7,#T_0d087c0e_1478_11eb_b977_52540050978drow7_col2{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow2_col9,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col2{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow2_col10,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col2{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow2_col11,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col2{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow2_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col2{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow2_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col2{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow2_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow3_col8,#T_0d087c0e_1478_11eb_b977_52540050978drow4_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col3,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col4,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col2{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow3_col4,#T_0d087c0e_1478_11eb_b977_52540050978drow4_col3,#T_0d087c0e_1478_11eb_b977_52540050978drow4_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col4{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow3_col6,#T_0d087c0e_1478_11eb_b977_52540050978drow6_col3{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow3_col9,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col3{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow3_col10,#T_0d087c0e_1478_11eb_b977_52540050978drow4_col9,#T_0d087c0e_1478_11eb_b977_52540050978drow4_col10,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col4,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col3,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col4,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col12{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow3_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col3,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col11{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow3_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col3{\n",
        "            background-color:  #fef6fb;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow3_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow3_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col3{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow4_col6,#T_0d087c0e_1478_11eb_b977_52540050978drow6_col4{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow4_col7,#T_0d087c0e_1478_11eb_b977_52540050978drow7_col4{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow4_col8,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col4,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col12{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow4_col11,#T_0d087c0e_1478_11eb_b977_52540050978drow5_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col4,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col9,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col5{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow4_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col4{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow4_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col4{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow5_col6,#T_0d087c0e_1478_11eb_b977_52540050978drow6_col5,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col11{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow5_col7,#T_0d087c0e_1478_11eb_b977_52540050978drow7_col5{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow5_col8,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col5{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow5_col9,#T_0d087c0e_1478_11eb_b977_52540050978drow5_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col5,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col5{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow5_col11,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col5,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col8{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow5_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow6_col9,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col6,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col5{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow5_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col5,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col15{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow5_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col5{\n",
        "            background-color:  #04598c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow6_col7,#T_0d087c0e_1478_11eb_b977_52540050978drow7_col6{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow6_col8,#T_0d087c0e_1478_11eb_b977_52540050978drow6_col10,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col6,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col6{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow6_col11,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col6{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow6_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col6{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow6_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col11,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col10,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col6{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow6_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col6{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow6_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col6{\n",
        "            background-color:  #549cc7;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow6_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col6{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow7_col8,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col7{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow7_col9,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col7{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow7_col10,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col7,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col13{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow7_col11,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col7,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col9{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow7_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col10,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col11,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col8,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col9,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col7,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col13{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow7_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col7{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow7_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col7{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow7_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow8_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col8,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col7{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow7_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col7,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col10{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow8_col9,#T_0d087c0e_1478_11eb_b977_52540050978drow9_col8{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow8_col11,#T_0d087c0e_1478_11eb_b977_52540050978drow11_col8{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow8_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col8{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow8_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col8{\n",
        "            background-color:  #045483;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow9_col10,#T_0d087c0e_1478_11eb_b977_52540050978drow10_col9{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow9_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col9{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow9_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col9{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow10_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col10{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow10_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col10{\n",
        "            background-color:  #60a1ca;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow10_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col10{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow10_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col10{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow11_col12,#T_0d087c0e_1478_11eb_b977_52540050978drow12_col11{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow11_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col11{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow11_col14,#T_0d087c0e_1478_11eb_b977_52540050978drow14_col11{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow12_col13,#T_0d087c0e_1478_11eb_b977_52540050978drow13_col12{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow12_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col12{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow13_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col13{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow14_col15,#T_0d087c0e_1478_11eb_b977_52540050978drow15_col14{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_0d087c0e_1478_11eb_b977_52540050978drow14_col16,#T_0d087c0e_1478_11eb_b977_52540050978drow16_col14{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_0d087c0e_1478_11eb_b977_52540050978d\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col1\" class=\"data row0 col1\" >-0.096456</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col2\" class=\"data row0 col2\" >-0.071836</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col3\" class=\"data row0 col3\" >0.323364</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col4\" class=\"data row0 col4\" >-0.151007</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col5\" class=\"data row0 col5\" >-0.198103</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col6\" class=\"data row0 col6\" >-0.218108</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col7\" class=\"data row0 col7\" >-0.081228</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col8\" class=\"data row0 col8\" >-0.123224</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col9\" class=\"data row0 col9\" >-0.106759</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col10\" class=\"data row0 col10\" >-0.167986</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col11\" class=\"data row0 col11\" >-0.226035</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col12\" class=\"data row0 col12\" >-0.064493</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col13\" class=\"data row0 col13\" >-0.171591</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col14\" class=\"data row0 col14\" >-0.326824</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col15\" class=\"data row0 col15\" >-0.286529</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow0_col16\" class=\"data row0 col16\" >-0.167442</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col0\" class=\"data row1 col0\" >-0.096456</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col2\" class=\"data row1 col2\" >0.983405</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col3\" class=\"data row1 col3\" >0.657775</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col4\" class=\"data row1 col4\" >0.066562</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col5\" class=\"data row1 col5\" >-0.078110</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col6\" class=\"data row1 col6\" >-0.062774</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col7\" class=\"data row1 col7\" >-0.034616</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col8\" class=\"data row1 col8\" >-0.080965</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col9\" class=\"data row1 col9\" >-0.071761</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col10\" class=\"data row1 col10\" >0.254681</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col11\" class=\"data row1 col11\" >0.167128</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col12\" class=\"data row1 col12\" >0.175374</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col13\" class=\"data row1 col13\" >-0.311208</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col14\" class=\"data row1 col14\" >-0.189334</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col15\" class=\"data row1 col15\" >-0.005231</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow1_col16\" class=\"data row1 col16\" >0.009708</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col0\" class=\"data row2 col0\" >-0.071836</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col1\" class=\"data row2 col1\" >0.983405</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col3\" class=\"data row2 col3\" >0.663060</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col4\" class=\"data row2 col4\" >0.029186</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col5\" class=\"data row2 col5\" >-0.112793</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col6\" class=\"data row2 col6\" >-0.106225</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col7\" class=\"data row2 col7\" >-0.050207</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col8\" class=\"data row2 col8\" >-0.083441</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col9\" class=\"data row2 col9\" >-0.085965</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col10\" class=\"data row2 col10\" >0.233200</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col11\" class=\"data row2 col11\" >0.162090</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col12\" class=\"data row2 col12\" >0.177184</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col13\" class=\"data row2 col13\" >-0.336512</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col14\" class=\"data row2 col14\" >-0.165759</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col15\" class=\"data row2 col15\" >-0.018758</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow2_col16\" class=\"data row2 col16\" >-0.026407</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col0\" class=\"data row3 col0\" >0.323364</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col1\" class=\"data row3 col1\" >0.657775</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col2\" class=\"data row3 col2\" >0.663060</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col4\" class=\"data row3 col4\" >0.235794</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col5\" class=\"data row3 col5\" >-0.109381</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col6\" class=\"data row3 col6\" >-0.129336</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col7\" class=\"data row3 col7\" >-0.002539</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col8\" class=\"data row3 col8\" >-0.026742</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col9\" class=\"data row3 col9\" >-0.036220</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col10\" class=\"data row3 col10\" >0.209524</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col11\" class=\"data row3 col11\" >0.179131</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col12\" class=\"data row3 col12\" >0.098106</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col13\" class=\"data row3 col13\" >-0.409172</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col14\" class=\"data row3 col14\" >-0.417908</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col15\" class=\"data row3 col15\" >-0.308989</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow3_col16\" class=\"data row3 col16\" >0.003322</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col0\" class=\"data row4 col0\" >-0.151007</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col1\" class=\"data row4 col1\" >0.066562</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col2\" class=\"data row4 col2\" >0.029186</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col3\" class=\"data row4 col3\" >0.235794</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col5\" class=\"data row4 col5\" >0.257711</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col6\" class=\"data row4 col6\" >0.048102</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col7\" class=\"data row4 col7\" >0.282333</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col8\" class=\"data row4 col8\" >0.118486</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col9\" class=\"data row4 col9\" >0.211713</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col10\" class=\"data row4 col10\" >0.211294</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col11\" class=\"data row4 col11\" >0.313058</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col12\" class=\"data row4 col12\" >0.057470</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col13\" class=\"data row4 col13\" >-0.028761</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col14\" class=\"data row4 col14\" >-0.094992</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col15\" class=\"data row4 col15\" >0.024799</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow4_col16\" class=\"data row4 col16\" >0.238318</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col0\" class=\"data row5 col0\" >-0.198103</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col1\" class=\"data row5 col1\" >-0.078110</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col2\" class=\"data row5 col2\" >-0.112793</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col3\" class=\"data row5 col3\" >-0.109381</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col4\" class=\"data row5 col4\" >0.257711</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col6\" class=\"data row5 col6\" >0.713298</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col7\" class=\"data row5 col7\" >0.704317</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col8\" class=\"data row5 col8\" >0.612203</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col9\" class=\"data row5 col9\" >0.568183</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col10\" class=\"data row5 col10\" >0.657404</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col11\" class=\"data row5 col11\" >0.574708</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col12\" class=\"data row5 col12\" >0.468279</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col13\" class=\"data row5 col13\" >0.572022</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col14\" class=\"data row5 col14\" >0.311770</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col15\" class=\"data row5 col15\" >0.296341</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow5_col16\" class=\"data row5 col16\" >0.824194</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col0\" class=\"data row6 col0\" >-0.218108</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col1\" class=\"data row6 col1\" >-0.062774</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col2\" class=\"data row6 col2\" >-0.106225</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col3\" class=\"data row6 col3\" >-0.129336</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col4\" class=\"data row6 col4\" >0.048102</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col5\" class=\"data row6 col5\" >0.713298</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col7\" class=\"data row6 col7\" >0.553848</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col8\" class=\"data row6 col8\" >0.624478</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col9\" class=\"data row6 col9\" >0.466471</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col10\" class=\"data row6 col10\" >0.628696</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col11\" class=\"data row6 col11\" >0.439535</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col12\" class=\"data row6 col12\" >0.447622</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col13\" class=\"data row6 col13\" >0.749890</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col14\" class=\"data row6 col14\" >0.391608</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col15\" class=\"data row6 col15\" >0.381454</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow6_col16\" class=\"data row6 col16\" >0.789517</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col0\" class=\"data row7 col0\" >-0.081228</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col1\" class=\"data row7 col1\" >-0.034616</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col2\" class=\"data row7 col2\" >-0.050207</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col3\" class=\"data row7 col3\" >-0.002539</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col4\" class=\"data row7 col4\" >0.282333</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col5\" class=\"data row7 col5\" >0.704317</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col6\" class=\"data row7 col6\" >0.553848</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col8\" class=\"data row7 col8\" >0.682493</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col9\" class=\"data row7 col9\" >0.588261</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col10\" class=\"data row7 col10\" >0.525103</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col11\" class=\"data row7 col11\" >0.594663</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col12\" class=\"data row7 col12\" >0.654176</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col13\" class=\"data row7 col13\" >0.481563</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col14\" class=\"data row7 col14\" >0.144450</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col15\" class=\"data row7 col15\" >0.219816</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow7_col16\" class=\"data row7 col16\" >0.796737</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col0\" class=\"data row8 col0\" >-0.123224</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col1\" class=\"data row8 col1\" >-0.080965</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col2\" class=\"data row8 col2\" >-0.083441</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col3\" class=\"data row8 col3\" >-0.026742</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col4\" class=\"data row8 col4\" >0.118486</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col5\" class=\"data row8 col5\" >0.612203</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col6\" class=\"data row8 col6\" >0.624478</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col7\" class=\"data row8 col7\" >0.682493</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col9\" class=\"data row8 col9\" >0.732585</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col10\" class=\"data row8 col10\" >0.655544</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col11\" class=\"data row8 col11\" >0.690002</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col12\" class=\"data row8 col12\" >0.637457</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col13\" class=\"data row8 col13\" >0.575234</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col14\" class=\"data row8 col14\" >0.220230</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col15\" class=\"data row8 col15\" >0.164998</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow8_col16\" class=\"data row8 col16\" >0.853964</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col0\" class=\"data row9 col0\" >-0.106759</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col1\" class=\"data row9 col1\" >-0.071761</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col2\" class=\"data row9 col2\" >-0.085965</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col3\" class=\"data row9 col3\" >-0.036220</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col4\" class=\"data row9 col4\" >0.211713</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col5\" class=\"data row9 col5\" >0.568183</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col6\" class=\"data row9 col6\" >0.466471</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col7\" class=\"data row9 col7\" >0.588261</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col8\" class=\"data row9 col8\" >0.732585</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col10\" class=\"data row9 col10\" >0.598981</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col11\" class=\"data row9 col11\" >0.656332</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col12\" class=\"data row9 col12\" >0.591559</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col13\" class=\"data row9 col13\" >0.308892</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col14\" class=\"data row9 col14\" >-0.059841</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col15\" class=\"data row9 col15\" >-0.041565</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow9_col16\" class=\"data row9 col16\" >0.781189</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col0\" class=\"data row10 col0\" >-0.167986</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col1\" class=\"data row10 col1\" >0.254681</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col2\" class=\"data row10 col2\" >0.233200</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col3\" class=\"data row10 col3\" >0.209524</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col4\" class=\"data row10 col4\" >0.211294</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col5\" class=\"data row10 col5\" >0.657404</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col6\" class=\"data row10 col6\" >0.628696</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col7\" class=\"data row10 col7\" >0.525103</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col8\" class=\"data row10 col8\" >0.655544</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col9\" class=\"data row10 col9\" >0.598981</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col11\" class=\"data row10 col11\" >0.746798</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col12\" class=\"data row10 col12\" >0.519496</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col13\" class=\"data row10 col13\" >0.348002</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col14\" class=\"data row10 col14\" >0.188808</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col15\" class=\"data row10 col15\" >0.266418</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow10_col16\" class=\"data row10 col16\" >0.800358</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col0\" class=\"data row11 col0\" >-0.226035</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col1\" class=\"data row11 col1\" >0.167128</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col2\" class=\"data row11 col2\" >0.162090</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col3\" class=\"data row11 col3\" >0.179131</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col4\" class=\"data row11 col4\" >0.313058</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col5\" class=\"data row11 col5\" >0.574708</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col6\" class=\"data row11 col6\" >0.439535</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col7\" class=\"data row11 col7\" >0.594663</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col8\" class=\"data row11 col8\" >0.690002</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col9\" class=\"data row11 col9\" >0.656332</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col10\" class=\"data row11 col10\" >0.746798</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col12\" class=\"data row11 col12\" >0.443986</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col13\" class=\"data row11 col13\" >0.204886</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col14\" class=\"data row11 col14\" >0.199787</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col15\" class=\"data row11 col15\" >0.101509</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow11_col16\" class=\"data row11 col16\" >0.716642</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col0\" class=\"data row12 col0\" >-0.064493</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col1\" class=\"data row12 col1\" >0.175374</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col2\" class=\"data row12 col2\" >0.177184</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col3\" class=\"data row12 col3\" >0.098106</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col4\" class=\"data row12 col4\" >0.057470</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col5\" class=\"data row12 col5\" >0.468279</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col6\" class=\"data row12 col6\" >0.447622</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col7\" class=\"data row12 col7\" >0.654176</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col8\" class=\"data row12 col8\" >0.637457</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col9\" class=\"data row12 col9\" >0.591559</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col10\" class=\"data row12 col10\" >0.519496</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col11\" class=\"data row12 col11\" >0.443986</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col13\" class=\"data row12 col13\" >0.462232</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col14\" class=\"data row12 col14\" >0.113960</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col15\" class=\"data row12 col15\" >0.211109</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow12_col16\" class=\"data row12 col16\" >0.723482</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col0\" class=\"data row13 col0\" >-0.171591</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col1\" class=\"data row13 col1\" >-0.311208</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col2\" class=\"data row13 col2\" >-0.336512</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col3\" class=\"data row13 col3\" >-0.409172</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col4\" class=\"data row13 col4\" >-0.028761</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col5\" class=\"data row13 col5\" >0.572022</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col6\" class=\"data row13 col6\" >0.749890</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col7\" class=\"data row13 col7\" >0.481563</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col8\" class=\"data row13 col8\" >0.575234</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col9\" class=\"data row13 col9\" >0.308892</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col10\" class=\"data row13 col10\" >0.348002</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col11\" class=\"data row13 col11\" >0.204886</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col12\" class=\"data row13 col12\" >0.462232</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col14\" class=\"data row13 col14\" >0.527833</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col15\" class=\"data row13 col15\" >0.562486</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow13_col16\" class=\"data row13 col16\" >0.651287</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col0\" class=\"data row14 col0\" >-0.326824</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col1\" class=\"data row14 col1\" >-0.189334</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col2\" class=\"data row14 col2\" >-0.165759</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col3\" class=\"data row14 col3\" >-0.417908</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col4\" class=\"data row14 col4\" >-0.094992</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col5\" class=\"data row14 col5\" >0.311770</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col6\" class=\"data row14 col6\" >0.391608</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col7\" class=\"data row14 col7\" >0.144450</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col8\" class=\"data row14 col8\" >0.220230</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col9\" class=\"data row14 col9\" >-0.059841</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col10\" class=\"data row14 col10\" >0.188808</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col11\" class=\"data row14 col11\" >0.199787</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col12\" class=\"data row14 col12\" >0.113960</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col13\" class=\"data row14 col13\" >0.527833</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col15\" class=\"data row14 col15\" >0.550188</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow14_col16\" class=\"data row14 col16\" >0.182687</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col0\" class=\"data row15 col0\" >-0.286529</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col1\" class=\"data row15 col1\" >-0.005231</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col2\" class=\"data row15 col2\" >-0.018758</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col3\" class=\"data row15 col3\" >-0.308989</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col4\" class=\"data row15 col4\" >0.024799</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col5\" class=\"data row15 col5\" >0.296341</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col6\" class=\"data row15 col6\" >0.381454</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col7\" class=\"data row15 col7\" >0.219816</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col8\" class=\"data row15 col8\" >0.164998</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col9\" class=\"data row15 col9\" >-0.041565</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col10\" class=\"data row15 col10\" >0.266418</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col11\" class=\"data row15 col11\" >0.101509</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col12\" class=\"data row15 col12\" >0.211109</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col13\" class=\"data row15 col13\" >0.562486</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col14\" class=\"data row15 col14\" >0.550188</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow15_col16\" class=\"data row15 col16\" >0.294778</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0d087c0e_1478_11eb_b977_52540050978dlevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col0\" class=\"data row16 col0\" >-0.167442</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col1\" class=\"data row16 col1\" >0.009708</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col2\" class=\"data row16 col2\" >-0.026407</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col3\" class=\"data row16 col3\" >0.003322</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col4\" class=\"data row16 col4\" >0.238318</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col5\" class=\"data row16 col5\" >0.824194</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col6\" class=\"data row16 col6\" >0.789517</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col7\" class=\"data row16 col7\" >0.796737</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col8\" class=\"data row16 col8\" >0.853964</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col9\" class=\"data row16 col9\" >0.781189</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col10\" class=\"data row16 col10\" >0.800358</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col11\" class=\"data row16 col11\" >0.716642</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col12\" class=\"data row16 col12\" >0.723482</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col13\" class=\"data row16 col13\" >0.651287</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col14\" class=\"data row16 col14\" >0.182687</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col15\" class=\"data row16 col15\" >0.294778</td>\n",
        "                        <td id=\"T_0d087c0e_1478_11eb_b977_52540050978drow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f0cffe89e50>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
